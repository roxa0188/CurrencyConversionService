//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCUI.CurrencyConversion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyConversion.ICurrencyConversion")]
    public interface ICurrencyConversion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyConversion/DkkToEur", ReplyAction="http://tempuri.org/ICurrencyConversion/DkkToEurResponse")]
        double DkkToEur(double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyConversion/DkkToEur", ReplyAction="http://tempuri.org/ICurrencyConversion/DkkToEurResponse")]
        System.Threading.Tasks.Task<double> DkkToEurAsync(double value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyConversionChannel : CCUI.CurrencyConversion.ICurrencyConversion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyConversionClient : System.ServiceModel.ClientBase<CCUI.CurrencyConversion.ICurrencyConversion>, CCUI.CurrencyConversion.ICurrencyConversion {
        
        public CurrencyConversionClient() {
        }
        
        public CurrencyConversionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyConversionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyConversionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyConversionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double DkkToEur(double value) {
            return base.Channel.DkkToEur(value);
        }
        
        public System.Threading.Tasks.Task<double> DkkToEurAsync(double value) {
            return base.Channel.DkkToEurAsync(value);
        }
    }
}
